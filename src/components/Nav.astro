---
import Toggle from "./ThemeChange.astro";

interface Props {
  isHomePage?: boolean;
}

const isHomePage = Astro.props.isHomePage;

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
  { label: "Home", href: "/" },
  { label: "Work", href: "/projects/" },
  { label: "About", href: "/about/" },
];
---

<nav class={isHomePage ? "home-page" : ""}>
  <ul class="nav-items">
    {
      textLinks.map(({ label, href }) => (
        <li>
          <a
            aria-current={Astro.url.pathname === href}
            class:list={[
              "link",
              isHomePage ? "home-page-link" : "",
              {
                active:
                  Astro.url.pathname === href ||
                  (href !== "/" && Astro.url.pathname.startsWith(href)),
              },
            ]}
            href={href}
          >
            {label}
          </a>
        </li>
      ))
    }
  </ul>
  <div class="toggle-wrapper">
    <Toggle />
  </div>
</nav>

<style>
  nav {
    display: flex;
    gap: 1rem;
    align-items: center;
    padding: 1rem;
    justify-content: space-between;
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 99;
    background-color: var(--color-bg);
    height: 40px;
  }

  .home-page {
    background: linear-gradient(
      to right,
      var(--c-orange) 0%,
      var(--c-orange) 66.66%,
      var(--color-bg-inverse) 66.66%,
      var(--color-bg-inverse) 100%
    );
  }

  .nav-container {
    display: flex;
    flex-grow: 1;
    justify-content: space-between;
  }

  .toggle-wrapper {
    display: flex;
    justify-content: flex-end;
  }

  @media screen and (max-width: 768px) {
    /* Mobile styles */
    .home-page {
      background: var(--c-orange);
    }
    .nav-container {
      justify-content: flex-start;
    }
    .nav-items {
      margin-right: auto;
    }
  }

  .link {
    color: var(--color-text);
    display: block;
    text-decoration: none;
    font-size: var(--f-d1);
    font-weight: bold;
    text-transform: uppercase;
    padding-top: 0.75em;
    padding-bottom: 0.75em;
    border: 3px solid var(--color-text);
    border-radius: 1.5rem;
    padding: 0.5em 1em;
  }

  .home-page-link {
    color: var(--color-text-inverse);
    border: 3px solid var(--color-text-inverse);
  }

  .link:hover,
  .link:focus {
    color: var(--c-orange);
    border-radius: 1.5rem;
    border: 3px solid var(--c-orange);
  }

  .home-page-link:hover,
  .home-page-link:focus {
    color: var(--color-text);
    border-radius: 1.5rem;
    border: 3px solid var(--color-text);
  }

  .link.active {
    color: var(--c-orange);
    border: 3px solid var(--c-orange);
  }

  .home-page-link.active {
    color: var(--color-text);
    border: 3px solid var(--color-text);
  }

  .nav-items {
    margin: 0; /* Remove default margin */
    padding: 0; /* Remove default padding */
    display: flex;
    gap: 1rem;
    list-style: none;
    flex-direction: row;
    justify-content: center;
    flex-grow: 1;
  }

  @media screen and (max-width: 768px) {
    /* Mobile styles */
    .nav-items {
      flex-grow: 0; /* Disable growing to free up space for the toggle */
      justify-content: flex-start; /* Align items to the left */
    }
  }
</style>

<script>
  // Get the theme toggle input
  const themeToggle = document.querySelector(
    '.theme-switch input[type="checkbox"]'
  ) as HTMLInputElement;

  // Get the current theme from local storage
  const currentTheme = localStorage.getItem("theme");

  // If the current local storage item can be found
  if (currentTheme) {
    // Set the body data-theme attribute to match the local storage item
    document.documentElement.setAttribute("data-theme", currentTheme);

    // If the current theme is dark, check the theme toggle
    if (currentTheme === "dark") {
      themeToggle.checked = true;
    }
  }

  // Function that will switch the theme based on the if the theme toggle is checked or not
  function switchTheme(e: any) {
    if (e.target.checked) {
      document.documentElement.setAttribute("data-theme", "dark");
      localStorage.setItem("theme", "dark");
    } else {
      document.documentElement.setAttribute("data-theme", "light");
      localStorage.setItem("theme", "light");
    }
  }

  // Add an event listener to the theme toggle, which will switch the theme
  themeToggle.addEventListener("change", switchTheme, false);
</script>
